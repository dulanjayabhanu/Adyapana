/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import static gui.AdminPanel.isNumericData;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MySQL;

/**
 *
 * @author dulanjaya
 */
public class TeacherSection extends javax.swing.JFrame {

    HashMap<String, String> classMap = new HashMap<>();
    HashMap<String, Integer> subjectMap = new HashMap<>();

    /**
     * Creates new form StudentSection
     */
    public TeacherSection() {
        initComponents();
        loadSubjects1();
        loadSubjects2();
        loadClasses();
        loadTeachers();
    }

    public void loadSubjects1() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `subject` WHERE `DEscription`<>'Not Assigned'");
            Vector<String> v = new Vector();
            v.add("Select");

            while (resultset.next()) {
                v.add(resultset.getString("subject.Description"));
                subjectMap.put(resultset.getString("Description"), resultset.getInt("Subno"));

                DefaultComboBoxModel model1 = new DefaultComboBoxModel(v);
                jComboBox1.setModel(model1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadSubjects2() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `subject` WHERE `DEscription`<>'Not Assigned'");
            Vector<String> v = new Vector();
            v.add("Select");

            while (resultset.next()) {
                v.add(resultset.getString("subject.Description"));

                DefaultComboBoxModel model1 = new DefaultComboBoxModel(v);
                jComboBox2.setModel(model1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadClasses() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `class` INNER JOIN `subject` ON "
                    + "`class`.`subNo`=`subject`.`Subno`");
            Vector<String> v = new Vector();
            v.add("Select");
            classMap.put("Select", "Select");

            while (resultset.next()) {
                v.add(resultset.getString("ClassNo") + " (" + resultset.getString("subject.Description") + ")");
                classMap.put(resultset.getString("ClassNo") + " (" + resultset.getString("subject.Description") + ")", resultset.getString("ClassNo"));

                DefaultComboBoxModel model1 = new DefaultComboBoxModel(v);
                jComboBox3.setModel(model1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadTeachers() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `teacher` INNER JOIN `subject` ON "
                    + "`teacher`.`subjects`=`subject`.`Subno`");
            DefaultTableModel model1 = (DefaultTableModel) jTable4.getModel();
            model1.setRowCount(0);

            while (resultset.next()) {
                Vector<String> v = new Vector();
                v.add(resultset.getString("Tno"));
                v.add(resultset.getString("Name"));
                v.add(resultset.getString("Address"));
                v.add(resultset.getString("subject.Description"));

                model1.addRow(v);
                jTable4.setModel(model1);
                jComboBox3.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void teacherSearchButtonReset() {
        jTextField8.setText("");
        jTextField9.setText("");
        jComboBox2.setSelectedIndex(0);

        jTextField8.requestFocus();
    }

    public void teacherReset() {
        jTextField10.setText("");
        jTextField11.setText("");
        jComboBox1.setSelectedIndex(0);
        jComboBox3.setSelectedIndex(0);

        jTable4.setEnabled(true);
        jButton6.setEnabled(true);
        jTextField10.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel20 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton9 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton17 = new javax.swing.JButton();

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setText("Edit personal data");

        jLabel13.setText("Teacher ID");

        jLabel14.setText("Name");

        jLabel15.setText("Address");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adyapana Institute - Teacher Section");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/icon.png")));
        setResizable(false);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Teacher Section");

        jLabel16.setText("Subject");

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Update");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Delete");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel18.setText("Search by ID");

        jLabel17.setText("or subject");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton9.setText("Reset");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher No.", "Name", "Address", "Subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jLabel19.setText("or name");

        jButton11.setText("Search");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel22.setText("Name");

        jLabel23.setText("Address");

        jLabel24.setText("Class");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton17.setText("Done");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField10)
                            .addComponent(jTextField11)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel22)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        AdminPanel adminPanel = new AdminPanel(AdminSignin.adminMap);
        adminPanel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String teacherId = jTextField8.getText();
        String teacherName = jTextField9.getText();
        String subject = String.valueOf(jComboBox2.getSelectedItem());

        String query = "SELECT * FROM `teacher` INNER JOIN `subject` ON "
                + "`teacher`.`subjects`=`subject`.`Subno`";

        if (!isNumericData(teacherId) & !teacherId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Invalied teacherID", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            if (!teacherId.isEmpty() & teacherName.isEmpty() & subject.equals("Select")) {
                query += " WHERE `Tno`='" + teacherId + "'";
            } else if (!teacherId.isEmpty() & !teacherName.isEmpty() & subject.equals("Select")) {
                query += " WHERE `Tno`='" + teacherId + "' AND `Name` LIKE '%" + teacherName + "%'";
            } else if (teacherId.isEmpty() & !teacherName.isEmpty() & subject.equals("Select")) {
                query += " WHERE `Name` LIKE '%" + teacherName + "%'";
            } else if (teacherId.isEmpty() & teacherName.isEmpty() & !subject.equals("Select")) {
                int subjectId = subjectMap.get(subject);
                query += " WHERE `subjects`='" + subjectId + "'";
            } else if (!teacherId.isEmpty() & teacherName.isEmpty() & !subject.equals("Select")) {
                int subjectId = subjectMap.get(subject);
                query += " WHERE `Tno`='" + teacherId + "' AND `subjects`='" + subjectId + "'";
            } else if (teacherId.isEmpty() & !teacherName.isEmpty() & !subject.equals("Select")) {
                int subjectId = subjectMap.get(subject);
                query += " WHERE `Name` LIKE '%" + teacherName + "%' AND `subjects`='" + subjectId + "'";
            } else if (!teacherId.isEmpty() & !teacherName.isEmpty() & !subject.equals("Select")) {
                int subjectId = subjectMap.get(subject);
                query += " WHERE `Tno`='" + teacherId + "' AND `Name` LIKE '%" + teacherName + "%' AND `subjects`='" + subjectId + "'";
            }

            query += " ORDER BY `Tno` ASC";

            try {
                ResultSet resultset = MySQL.execute(query);
                DefaultTableModel model1 = (DefaultTableModel) jTable4.getModel();
                model1.setRowCount(0);

                while (resultset.next()) {
                    Vector<String> v = new Vector<>();
                    v.add(resultset.getString("Tno"));
                    v.add(resultset.getString("Name"));
                    v.add(resultset.getString("Address"));
                    v.add(resultset.getString("subject.Description"));

                    model1.addRow(v);
                    jTable4.setModel(model1);
                }
                teacherSearchButtonReset();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        teacherSearchButtonReset();
        loadTeachers();
        teacherReset();

        jTable4.setEnabled(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int selectedRow = jTable4.getSelectedRow();

            String teacherId = String.valueOf(jTable4.getValueAt(selectedRow, 0));
            String name = String.valueOf(jTable4.getValueAt(selectedRow, 1));
            String address = String.valueOf(jTable4.getValueAt(selectedRow, 2));
            String subject = String.valueOf(jTable4.getValueAt(selectedRow, 3));

            try {
                ResultSet resultset = MySQL.execute("SELECT * FROM `class` INNER JOIN `subject` ON "
                        + "`class`.`subNo`=`subject`.`Subno` WHERE `Tno`='" + teacherId + "'");

                if (resultset.next()) {
                    jComboBox3.setSelectedItem(resultset.getString("ClassNo") + " (" + resultset.getString("subject.Description") + ")");
                } else {
                    jComboBox3.setSelectedItem("Select");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            jTextField10.setText(name);
            jTextField11.setText(address);

            if (subject.equals("Not Assigned")) {
                jComboBox1.setSelectedItem("Select");
            } else {
                jComboBox1.setSelectedItem(subject);
            }

            jTable4.setEnabled(false);
            jButton6.setEnabled(false);
            jComboBox3.setEnabled(true);
            jTextField10.requestFocus();
        }
    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String name = jTextField10.getText();
        String address = jTextField11.getText();
        String subject = String.valueOf(jComboBox1.getSelectedItem());

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter name", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (name.length() > 100) {
            JOptionPane.showMessageDialog(this, "Name must have <100 characters", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter address", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (address.length() > 100) {
            JOptionPane.showMessageDialog(this, "Address must have <100 characters", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            try {
                int newSubjectId;

                if (subject.equals("Select")) {
                    newSubjectId = 10;
                } else {
                    int subjectId = subjectMap.get(subject);
                    newSubjectId = subjectId;
                }

                MySQL.execute("INSERT INTO `teacher` (`Name`,`Address`,`subjects`) VALUES ('" + name + "','" + address + "','" + newSubjectId + "')");

            } catch (Exception e) {
                e.printStackTrace();
            }
            loadTeachers();
            teacherReset();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable4.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String name = jTextField10.getText();
            String address = jTextField11.getText();
            String subject = String.valueOf(jComboBox1.getSelectedItem());
            int subjectId = subjectMap.get(subject);
            String teacherId = String.valueOf(jTable4.getValueAt(selectedRow, 0));
            String className = String.valueOf(jComboBox3.getSelectedItem());

            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter name", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (name.length() > 100) {
                JOptionPane.showMessageDialog(this, "Name must have <100 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (address.isEmpty()) {
               JOptionPane.showMessageDialog(this, "Please enter address", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (address.length() > 100) {
                JOptionPane.showMessageDialog(this, "Address must have <100 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                int classId = Integer.parseInt(classMap.get(className));
                try {
                    if(subject.equals("Select")){
                        MySQL.execute("UPDATE `teacher` SET `Name`='" + name + "',`Address`='" + address + "' WHERE `Tno`='" + teacherId + "'");
                    }else{
                        MySQL.execute("UPDATE `teacher` SET `Name`='" + name + "',`Address`='" + address + "',`subjects`='" + subjectId + "' WHERE `Tno`='" + teacherId + "'");
                    }
                   if (!className.equals("Select")) {
                        MySQL.execute("UPDATE `class` SET `subNo`='" + subjectId + "' WHERE `ClassNo`='" + classId + "'");
                    }
                    loadTeachers();
                    teacherReset();
                } catch (Exception e) {
                    e.printStackTrace();
               }
            }
        }  
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable4.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String teacherId = String.valueOf(jTable4.getValueAt(selectedRow, 0));

            try {
                MySQL.execute("DELETE FROM `class` WHERE `Tno`='" + teacherId + "'");
                MySQL.execute("DELETE FROM `invoice` WHERE `Tno`='" + teacherId + "'");
                MySQL.execute("DELETE FROM `teacher` WHERE `Tno`='" + teacherId + "'");
                loadTeachers();
                teacherReset();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
